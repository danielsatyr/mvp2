generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  profile   Profile?
}

model Occupation {
  id                      Int     @id @default(autoincrement())
  occupationId            String @unique
  name                    String
  anzscoCode              String  @map("anzsco_code")
  skillAssessmentBody     String  @map("skill_assessment_body")
  mltsslFlag              Boolean @map("mltssl_flag")
  stsolFlag               Boolean @map("stsol_flag")
  rolFlag                 Boolean @map("rol_flag")

  subclass190   Boolean @default(false) @map("190")
  subclass189Pt Boolean @default(false) @map("189 (PT)")
  subclass186   Boolean @default(false) @map("186")
  subclass491St Boolean @default(false) @map("491(S/T)")
  subclass491F  Boolean @default(false) @map("491 (F)")
  subclass494   Boolean @default(false) @map("494")
  subclass482   Boolean @default(false) @map("482")
  subclass407   Boolean @default(false) @map("407")
  subclass485   Boolean @default(false) @map("485")
  skillLevelRequired      String?                  @map("Skill_Level_Required")
}

model Profile {
  id                      Int      @id @default(autoincrement())
  userId                  Int      @unique
  visaSubclass            String   @default("189")
  age                     Int
  occupation              String
  englishLevel            String
  workExperience_in       Int
  workExperience_out      Int
  nationality             String
  education_qualification String
  study_requirement       String
  regional_study          String
  professional_year       String
  natti                   String
  partner                 String
  nomination_sponsorship  String
  specialistQualification String?  @default("none")
  score                   Int
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  user                    User     @relation(fields: [userId], references: [id])
}
